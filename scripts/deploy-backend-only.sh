#!/bin/bash

# Deploy only the backend to Cloud Run
# This script ensures minimal upload size

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROJECT_ID="tastory-hackathon"
REGION="us-central1"
SERVICE_NAME="tastory-api"

echo -e "${GREEN}ðŸš€ Deploying Tastory Backend to Cloud Run${NC}"

# Create a temporary directory for deployment
TEMP_DIR=$(mktemp -d)
echo -e "${YELLOW}Creating clean deployment directory: $TEMP_DIR${NC}"

# Copy only necessary files
cp app.py "$TEMP_DIR/"
cp requirements.txt "$TEMP_DIR/"
cp Dockerfile "$TEMP_DIR/"
cp create_indexes.py "$TEMP_DIR/" 2>/dev/null || true

# Create a minimal .gcloudignore
cat > "$TEMP_DIR/.gcloudignore" << EOF
.git
.gitignore
__pycache__
*.pyc
.env*
*.log
EOF

# Deploy from the clean directory
cd "$TEMP_DIR"
echo -e "${YELLOW}Deploying from clean directory...${NC}"

gcloud run deploy $SERVICE_NAME \
    --source . \
    --platform managed \
    --region $REGION \
    --allow-unauthenticated \
    --project $PROJECT_ID \
    --set-env-vars "DB_NAME=tastory,RECIPES_COLLECTION=recipes" \
    --set-secrets "MONGODB_URI=mongodb-uri:latest" \
    --timeout 600

# Get service URL
SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')

# Clean up
cd - > /dev/null
rm -rf "$TEMP_DIR"

echo -e "\n${GREEN}âœ… Backend deployed successfully!${NC}"
echo -e "URL: ${GREEN}$SERVICE_URL${NC}"

# Update frontend config
echo -e "\n${YELLOW}Updating frontend configuration...${NC}"
cat > frontend/.env.production.local << EOF
# Auto-generated by deploy-backend-only.sh
REACT_APP_API_URL=$SERVICE_URL
REACT_APP_ENABLE_TTS=true
REACT_APP_ENABLE_RECENT_SEARCHES=true
REACT_APP_ENABLE_STATS_DISPLAY=true
EOF

echo -e "${GREEN}âœ… Frontend configuration updated${NC}"
echo -e "\n${YELLOW}Next steps:${NC}"
echo "1. cd frontend && npm run build"
echo "2. firebase deploy --only hosting --project $PROJECT_ID" 