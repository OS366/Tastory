name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: |
            {
              "template": "## What's Changed\n\n#{{CHANGELOG}}\n\n**Full Changelog**: #{{RELEASE_DIFF}}",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature", "feat", "enhancement"]
                },
                {
                  "title": "## 🐛 Bug Fixes",
                  "labels": ["fix", "bug", "bugfix"]
                },
                {
                  "title": "## 📚 Documentation",
                  "labels": ["docs", "documentation"]
                },
                {
                  "title": "## 🧰 Maintenance",
                  "labels": ["chore", "maintenance", "ci"]
                },
                {
                  "title": "## 🔒 Security",
                  "labels": ["security", "vulnerability"]
                }
              ],
              "sort": {
                "order": "ASC",
                "on_property": "mergedAt"
              },
              "max_pull_requests": 50,
              "max_back_track_time_days": 30
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version in package files
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}

          # Update frontend package.json
          cd frontend
          npm version $VERSION --no-git-tag-version || true
          cd ..

          # Update Python version file if it exists
          if [ -f "version.py" ]; then
            echo "__version__ = '$VERSION'" > version.py
          fi

          # Create PR with version updates
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b update-version-$VERSION
          git add -A
          git diff --staged --quiet || git commit -m "chore: update version to $VERSION"
          git push origin update-version-$VERSION || true

      - name: Create version update PR
        if: success()
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          gh pr create \
            --title "chore: update version to $VERSION" \
            --body "Automated version update after release $VERSION" \
            --base main \
            --head update-version-$VERSION || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
